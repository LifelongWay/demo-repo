#	GENERAL

1) if we DON'T already have local repo, then need to clone.
   $ git clone <url_host>
   NOTE: cloning already creates alias with <host_URL> to <alias = "origin"> ( talked in (3) )

2) if we have ready local repo, you can push it to hosted repo
   (NOTE: hosted-repo and local-repo names must not be the same, but it's prefferable to
    keep them the same)

# PUSHING local to host RULES
1. first check if you have anything to commit (git status)
2. then $git push <host_URL> <branch_to_push>

3) instead of writing everytime <host_URL>, we can make alias of repository,
  $ git remote add <alias_name> <host_URL>
  --> now, <alias_name> contain <host_URL>
  Usually we make <alias_name> "origin"

 Example: git remote add origin <host_URL>

3.1) $ git remote -v // shows aliases 

4) $ git pull origin <brName> // it'll merge remote <brName> into our current branch 
   // that's why we should BE AT CORRECT BRANCH WHEN PULLING


# 	MERGING AND PUSHING TO REMOTE

1) if we created branch for making new feature to master,
   we then merge to LOCAL master(main) the ready feature branch.
   (DON't merge even local master !!!)

2) HOWEVER, DON'T  merge localy and the push master.

 INSTEAD, PUSH ONLY BRANCH with feature, so ALL DEVELOPER SHOULD DISCUSS whether to 
 merge pushed branch to github.

$ git push origin <branch_feature-x>

// IN GITHUB YOU'LL see button to compare (i.e what branch adds to merge),
 also many features (comment under what pull-request does)



# 	IMPORTANT

BEFORE MAKING ANY FEATURE, YOU NEED TO PULL MASTER BRANCH
JUST IN CASE IF ANYONE HAS DONE ANY CHANGES

ALSO, DON'T EDITR MASTER(MAIN) DIRECTLY, INSTEAD MAKE BRANCH, IN WHICH YOU WRITE 
NEW FEATURE. THEN PUSH BRNACH TO REMOTE REPO.

DON'T FORGET THAT PULLING IS MERGING INTO CURRENT BRANCH (EXPLAINED ABOVE)
